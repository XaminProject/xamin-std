#!/bin/bash

# usage: RunTest ["command"] ["stagelist"]  
RunTest()
{
    if [ -z "$1" ] || [ -z "$2" ];then
        return 0
    else
        CMD=$1
        Staged=$2
        echo "$Staged" | while read -r address;do 
            result=`$CMD "$address" 2>&1`  
            if [ $? != 0 ]; then
                case $CMD in
                    "php -l")
                        echo "Check for file \"$address\" failed, result is:\n$result"
                        ;;
                    "phpcs --standard=Xamin")
                        echo "Codesniffer check on \"$address\" failed, result is:\n$result"
                        ;;
                    "jshint")
                        echo "Check for file \"$address\" failed, result is:\n$result"
                        ;;
                    "pep8")
                        echo "you've syntax issue in \"$address\": \n$result"
                        ;;
                    "pep257")
                        echo "you've missed docstring standards in \"$address\":\n$result"
                        ;;
                esac
                return 1
            fi
        done
    fi
    return 0
}

FindInvalidKeys()
{
    if [ -z "$1" ] || [ -z "$2" ];then 
        return 0
    else
        Staged=$1
        InvalKeys=$2
        echo "$Staged" | while read -r address;do
            for key in $InvalKeys;do
                result=`grep -iHn $key "$address" 2>&1`
                if [ $? == 0 ]; then 
                    echo "Found invalid keyword : $address : $result"
                    return 1
                fi
            done
        done
    fi
    return 0
}

PHPInvalidKeys="xdebug_break var_dump print_r"
Staged=`git diff --staged --cached --name-status`
Staged=`echo "$Staged" | grep -v "^D" | sed -e 's/^.\t//g'`

StagedJS=`echo "$Staged" | grep "\.js$"`
StagedPHP=`echo "$Staged" | grep "\.php$"`
StagedPY=`echo "$Staged" | grep "\.py$"`

code=0

RunTest "php -l" "$StagedPHP" 
code=`expr $code + $?`
FindInvalidKeys "$StagedPHP" "$PHPInvalidKeys"
code=`expr $code + $?`
RunTest "phpcs --standard=Xamin" "$StagedPHP" 
code=`expr $code + $?`
RunTest "pep8" "$StagedPY"
code=`expr $code + $?`
RunTest "pep257" "$StagedPY"
code=`expr $code + $?`
RunTest "jshint" "$StagedJS"
code=`expr $code + $?`

exit $code

